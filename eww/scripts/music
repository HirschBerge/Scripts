#!/usr/bin/env bash

## Get data
STATUS="$(playerctl status)"

## Get status
get_status() {
	while true; do
		if [ "$(playerctl status)" = "Playing" ]; then
			echo ""
		else
			echo "喇"
		fi
		sleep 1
	done
}

## Get song
get_song() {
	while true; do
	  song="$(playerctl metadata xesam:title)"
		if [[ -z "$song" ]]; then
			echo "Offline"
      song="Offline"
		else
			echo "$song"
		fi
		sleep 1
	done		
}

## Get artist
get_artist() {
	while true; do
		artist="$(playerctl metadata xesam:artist)"
		if [[ -z "$artist" ]]; then
			echo ""
		else
			echo "$artist"
		fi
		sleep 1
	done	
}


## Get cover
get_cover() {
	while true; do
	  if [ "$STATUS" = "Playing" ] || [ "$STATUS" == "Paused" ];then
	    echo "$(playerctl metadata mpris:artUrl| awk '{split($0,a,"//"); print a[2]}')"
	  else
	    echo "img/music"
	  fi
		sleep 1
	done
}
dl_cover(){
  base_dir="$HOME/.cache"
  if [ "$(playerctl status)" = "Playing" ]; then
      # Get album art URL using D-Bus
    album_art_url=$(playerctl metadata mpris:artUrl)
    if [ -n "$album_art_url" ]; then
    # Get the current song name
      song_name="$(playerctl metadata xesam:title)"
      echo "stop point 2"
      if [ -n "$song_name" ]; then
        # Read the previously stored song name from a file
        previous_song_name=$(cat "${base_dir}/spotify_song_name.txt" 2>/dev/null)
        # Compare the current song name with the previously stored one
        if [ "$song_name" != "$previous_song_name" ]; then
          # Remove old album art file if it exists
          rm -f "${base_dir}/image.jpg"
          # Extract the track ID from the album art URL to uniquely identify the song
          track_id=$(echo "$album_art_url" | awk -F'/' '{print $(NF-1)}')
          # Download the album art for the current song as "image.jpg"
          wget -q -O "${base_dir}/image.jpg" "$album_art_url"
          # Update the stored song name
          echo "$song_name" > "${base_dir}/spotify_song_name.txt"
        fi
      fi
    fi
  fi
  echo "${base_dir}/image.jpg"
}

## Toggle status
toggle() {
  playerctl play-pause
}

## Next
next() {
  playerctl next
}

## Previous
previous() {
  playerctl previous
}

## Execute accordingly
if [[ "$1" == "--song" ]]; then
	get_song
elif [[ "$1" == "--artist" ]]; then
	get_artist
elif [[ "$1" == "--status" ]]; then
	get_status
elif [[ "$1" == "--cover" ]]; then
	dl_cover
elif [[ "$1" == "--toggle" ]]; then
	toggle
elif [[ "$1" == "--next" ]]; then
	next
elif [[ "$1" == "--prev" ]]; then
	previous
fi
